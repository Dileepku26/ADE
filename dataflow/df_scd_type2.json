{
	"name": "df_scd_type2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "ls_azure_sql_server",
						"type": "LinkedServiceReference"
					},
					"name": "source"
				},
				{
					"linkedService": {
						"referenceName": "ls_azuresqlserver_target",
						"type": "LinkedServiceReference"
					},
					"name": "target"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "srcselect"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CustomerID as integer,",
				"          CustomerName as string,",
				"          Location as string,",
				"          Sales as decimal(19,4)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'query',",
				"     store: 'sqlserver',",
				"     query: 'select CustomerID , CustomerName, Location, Sales from customer',",
				"     isolationLevel: 'READ_UNCOMMITTED') ~> source",
				"source(output(",
				"          CustomerKey as integer,",
				"          CustomerID as integer,",
				"          CustomerName as string,",
				"          Location as string,",
				"          Sales as decimal(19,4)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'query',",
				"     store: 'sqlserver',",
				"     query: 'select   CustomerKey, CustomerID, CustomerName, Location,  Sales  from customer where EndDate is Null',",
				"     isolationLevel: 'READ_UNCOMMITTED') ~> target",
				"source select(mapColumn(",
				"          Src_CustomerID = CustomerID,",
				"          Src_CustomerName = CustomerName,",
				"          Src_Location = Location,",
				"          Src_Sales = Sales",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> srcselect"
			]
		}
	}
}